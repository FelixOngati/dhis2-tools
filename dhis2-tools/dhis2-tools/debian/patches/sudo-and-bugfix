Description: Update permission and bugfix
 See dch description
 .
 dhis2-tools (1.3-1ubuntu2) trusty; urgency=low
 .
   * Removed unnecessary sudo, fixed database parameter in dhis2-delete-instance, updated nginx sample config
Author: Simon Jespersen <simjes91@me.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- dhis2-tools-1.3.orig/etc/sudoers.d/dhis2
+++ dhis2-tools-1.3/etc/sudoers.d/dhis2
@@ -5,7 +5,6 @@ Cmnd_Alias DHIS2PROGS = /usr/bin/dhis2-*
 Runas_Alias DHIS2USERS = %dhis2
 
 # Dhis2 admins can run dhis2-instance-create as root
-%dhis2admin ALL=(postgres)NOPASSWD:/usr/bin/psql
 %dhis2admin ALL=(root)NOPASSWD:DHIS2CREATE,/usr/sbin/useradd
 # Dhis2 admins can run all dhis2 progs as the dhis2 instance user
 %dhis2admin ALL=(DHIS2USERS)NOPASSWD:ALL
--- dhis2-tools-1.3.orig/usr/bin/dhis2-delete-instance
+++ dhis2-tools-1.3/usr/bin/dhis2-delete-instance
@@ -29,7 +29,7 @@ usage() {
 
 # main entry point
 echo checking options
-while getopts p:nh opt
+while getopts d:h opt
 do
   case $opt in
     d) DBNAME=$OPTARG ;;
@@ -61,11 +61,11 @@ fi
 if [ -z "${DBNAME}" ]; then
   DBNAME=${TARGET}
 fi
- 
+
 deleteInstance() {
   dhis2-shutdown ${TARGET}
   sleep 3
-  sudo userdel -r ${TARGET} 
+  sudo userdel -r ${TARGET}
   dropdb ${DBNAME}
   dropuser ${TARGET}
   echo "The instance has been deleted"
@@ -78,6 +78,3 @@ read -p "Are you sure you want to delete
         [Yy]* ) deleteInstance;;
         * ) exit 0;;
     esac
-
-
-
--- dhis2-tools-1.3.orig/usr/bin/dhis2-instance-create
+++ dhis2-tools-1.3/usr/bin/dhis2-instance-create
@@ -114,24 +114,29 @@ echo "You are about to create a Dhis2 in
 id -u $TARGET >/dev/null 2>&1 && { echo "User $TARGET already exists"; exit 1; }
 checkport HTTP "$HTTPPORT"
 if $CREATEDB; then
-  sudo -u postgres psql $DBNAME -c '\q' >/dev/null 2>&1 && { echo "Database $DBNAME exists"; exit 1; }
+  psql $DBNAME -c '\q' >/dev/null 2>&1 && { echo "Database $DBNAME exists"; exit 1; }
 fi
 ###############################################################
 
 #  Right, we should be good to go ...
 
 # create the system user
+echo "Creating system user"
 sudo useradd -m -s /bin/bash -b $DHIS2BASEDIR -c "$TARGET dhis2 instance" -g dhis2 -k $DHIS2SKEL $TARGET
-# create the database user with a strong password
+# create the database user with a strong password. If this hangs: https://goo.gl/gUD3ga
+echo "Generating password"
 PASSWORD=$(makepasswd --chars=10)
-sudo -u postgres psql -c "CREATE ROLE $TARGET PASSWORD '$PASSWORD' NOSUPERUSER CREATEDB NOCREATEROLE INHERIT LOGIN;"
+echo "Creating database role"
+psql postgres -c "CREATE ROLE $TARGET PASSWORD '$PASSWORD' NOSUPERUSER CREATEDB NOCREATEROLE INHERIT LOGIN;"
 
 if $CREATEDB; then
   # Create the database
-  sudo -u postgres psql -c  "CREATE DATABASE $DBNAME OWNER $TARGET ENCODING 'UTF-8' TEMPLATE template0;"
-  sudo -u postgres psql -c  "GRANT ALL ON DATABASE $DBNAME TO $TARGET;"
+  echo "Creating database"
+  psql postgres -c  "CREATE DATABASE $DBNAME OWNER $TARGET ENCODING 'UTF-8' TEMPLATE template0;"
+  psql postgres -c  "GRANT ALL ON DATABASE $DBNAME TO $TARGET;"
 fi
 
+echo "Creating dhis.conf"
 sudo -u $TARGET sh -c "cat > $DHIS2HOME/dhis.conf" << EOT
 connection.dialect = org.hibernate.dialect.PostgreSQLDialect
 connection.driver_class = org.postgresql.Driver
--- dhis2-tools-1.3.orig/usr/bin/dhis2-nginx
+++ dhis2-tools-1.3/usr/bin/dhis2-nginx
@@ -1,14 +1,15 @@
 #!/bin/bash
-#       ____  __  ______________ 
+#       ____  __  ______________
 #      / __ \/ / / /  _/ ___/__ \
 #     / / / / /_/ // / \__ \__/ /
-#    / /_/ / __  // / ___/ / __/ 
+#    / /_/ / __  // / ___/ / __/
 #   /_____/_/ /_/___//____/____/
 #
 #   DHIS2 instance startup script
 
-if [ "$#" -lt 1 ]; then 
-  echo "No conf file specifiied - using default" 
+if [ "$#" -lt 1 ]; then
+  echo "No conf file specified - using default"
+  echo "This is only meant to help you start configuring Nginx, it is not a complete config"
   CONFFILE=/usr/share/dhis2-tools/samples/nginx/dhis2
 else
   CONFFILE=$1
@@ -18,8 +19,9 @@ BASE=$(basename $CONFFILE)
 
 # nginx setup
 echo "setting up nginx with $CONFFILE"
-[[ -e /etc/nginx/sites-available/$BASE ]] && { echo "/etc/nginx/sites-available/$BASE already exists"; exit 1; } 
+[[ -e /etc/nginx/sites-available/$BASE ]] && { echo "/etc/nginx/sites-available/$BASE already exists"; exit 1; }
 cp $CONFFILE /etc/nginx/sites-available
-unlink /etc/nginx/sites-enabled/* || { echo "no nginx sites configured"; } 
-ln -s /etc/nginx/sites-available/$BASE /etc/nginx/sites-enabled/$BASE                
+unlink /etc/nginx/sites-enabled/* || { echo "no nginx sites configured"; }
+ln -s /etc/nginx/sites-available/$BASE /etc/nginx/sites-enabled/$BASE
 /etc/init.d/nginx restart
+echo "You should look into securing your server with SSL, some help can be found here: https://goo.gl/Fr7Ib6"
--- dhis2-tools-1.3.orig/usr/share/dhis2-tools/samples/nginx/dhis2
+++ dhis2-tools-1.3/usr/share/dhis2-tools/samples/nginx/dhis2
@@ -1,6 +1,12 @@
 # apply these settings to all backends
 proxy_cache_path  /var/cache/nginx  keys_zone=dhis:250m  inactive=1d;
-proxy_cache       dhis;
+proxy_redirect    off;
+proxy_set_header  Host               $host;
+proxy_set_header  X-Real-IP          $remote_addr;
+proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
+proxy_set_header  X-Forwarded-Proto  https;
+#proxy_cache       dhis;
+
 
 # redirect http to https server
 server {
@@ -20,44 +26,12 @@ server {
   ssl_session_timeout  30m;
 
   ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
-  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
-  # if the above give trouble, eg with older windoze machines, below is a reasonable compromise
-  # ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
+  ssl_ciphers                HIGH:!aNULL:!MD5;
   ssl_prefer_server_ciphers  on;
-  ssl_session_cache shared:SSL:10m;
-  
+
   # nominate a backend as the default
   rewrite ^/$ /dhis/;
- 
-  # Proxy pass to servlet containers
-  location /dhis 
-  { 
-     proxy_pass  http://localhost:8080/dhis; 
-     proxy_redirect    off;
-     proxy_set_header  Host               $host;
-     proxy_set_header  X-Real-IP          $remote_addr;
-     proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
-     proxy_set_header  X-Forwarded-Proto  https;
-  }
-  
-  location /training 
-  { 
-     proxy_pass  http://localhost:8081/training; 
-     proxy_redirect    off;
-     proxy_set_header  Host               $host;
-     proxy_set_header  X-Real-IP          $remote_addr;
-     proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
-     proxy_set_header  X-Forwarded-Proto  https;
-  }
-
-  location /staging
-  { 
-     proxy_pass  http://localhost:8082/staging; 
-     proxy_redirect    off;
-     proxy_set_header  Host               $host;
-     proxy_set_header  X-Real-IP          $remote_addr;
-     proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
-     proxy_set_header  X-Forwarded-Proto  https;
-  }
 
+  # Proxy pass to servlet containers
+  location /dhis { proxy_pass  http://localhost:8080/dhis; }
 }
--- dhis2-tools-1.3.orig/usr/share/dhis2-tools/skel/conf/server.xml
+++ dhis2-tools-1.3/usr/share/dhis2-tools/skel/conf/server.xml
@@ -20,6 +20,12 @@
       <Host name="localhost"  appBase="webapps" 
             unpackWARs="true" autoDeploy="false"
             xmlValidation="false" xmlNamespaceAware="false">
+        <!-- Mark HTTP as HTTPS forward from SSL termination at nginx proxy -->
+        <Valve className="org.apache.catalina.valves.RemoteIpValve"
+            remoteIpHeader="x-forwarded-for"
+            remoteIpProxiesHeader="x-forwarded-by"
+            protocolHeader="x-forwarded-proto"
+        />
       </Host>
     </Engine>
   </Service>
